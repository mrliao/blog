;
'use strict';
var dduFunc = {currentPage: 1};
dduFunc.tplConfig = {
    newsTpl: [
        {
            author_text: "author",
            news_link_text: 'show more',
            inputtime_text: 'datetime'
        }
    ]
};
//--------------------------------------------//
// 模板
dduFunc.defaultTemplates = {
    newsTpl: function() {
        return '<li class="border-bottom-2">' +
            '<div class="col-sm-12"> ' +
            '<div class="col-sm-8 text-left"> ' +
            '<h5>#title#</h5> ' +
            '</div> ' +
            '</div> ' +
            '<p  class="text-left ddu-font-12"> <img src="#thumb#" class="img-responsive"/> ' +
            '<span class="text-left">#author_text#:#username#|#inputtime_text#:#inputtime# ' +
            '</span> </p> <p class="text-left ddu-font-12">#description#</p> ' +
            '<p class="text-right col-sm-12 ddu-font-12 ddu-color">' +
            '<a href="#url#" title="#title#">#news_link_text#&nbsp;' +
            '<img src="statics/dduwork/source/images/Arrow-Right.png" />' +
            '</a>' +
            '</p> ' +
            '</li>';
    },
    memberTpl: function() {
        return '';
    }
};
/**
 * 格式化类库
 * @param formatType
 * @returns {*}
 */
dduFunc.format = function(formatType) {
    var formatConfig = {
        dateFormat: function (timestamp) {
            var newDate = new Date();
            newDate.setTime(timestamp * 1000);
            return newDate.toTimeString()
        }
    }
    return formatConfig[formatType] === 'undefined' ? null : formatConfig[formatType];
}
//操作模版
dduFunc.opTemplate = function() {
    var self = this;
    return {
        /**
         * 增加模板
         * @param templateFlag
         * @param template
         * @returns {*}
         */
        addTpl: function(templateFlag, template) {
            if(this.hasTpl(templateFlag)) {
                return templateFlag;
            }
            self.defaultTemplates[templateFlag] = template;
        },
        /**
         * 模板key
         * @param templateFlag
         * @returns {boolean}
         */
        hasTpl: function(templateFlag) {
            if(self.defaultTemplates[templateFlag] != undefined) {
                return true;
            }
            return false;
        },
        /**
         * 获取模板内容
         * @param templateFlag
         * @returns {*}
         */
        getTpl: function(templateFlag) {
            return self.defaultTemplates[templateFlag]();
        },
        /**
         * 移除模板
         * @param templateFlag
         */
        removeTpl: function(templateFlag) {
            delete self.defaultTemplates[templateFlag];
        },
        /**
         * 替换模版
         * @param data
         * @param template
         * @returns {*}
         */
        replaceTpl: function(data, template) {
            var tplHtml = [];
            $.each(data, function( i, v ) {
                var initTpl = template;
                $.each(v, function( field, value ) {
                    var re =new RegExp("#" + field + "#");
                    initTpl = initTpl.replace(re, value);
                });
                tplHtml.push(initTpl);
            });
            return tplHtml.join();
        }
    }
}
/**
 * 获取更多
 * @param appendId 追加内容的id
 * @param fetchUrl 获取数据的url
 * @param templateFlag 模板key
 * @param template 展示模版
 */
dduFunc.getMoreList = function(obj, appendId, fetchUrl, templateFlag, template) {
    var self = this;
    var op = self.opTemplate();
    if(!template && templateFlag && op.hasTpl(templateFlag)) template = op.getTpl(templateFlag);
    // 模板解析
    var templatePattern = self.tplConfig[templateFlag];
    // showloading
    $.post(fetchUrl + '&page=' + self.currentPage, function(res) {
        if(res.status === 0 && res.data.length) {
            // config replace
            template = op.replaceTpl(templatePattern, template);
            var html = op.replaceTpl(res.data, template);
            $('#' + appendId).append(html);
            self.currentPage++;
        } else {
            $(obj).html(' no more ');
        }
    });
}
;
